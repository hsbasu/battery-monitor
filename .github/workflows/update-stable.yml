# Automatically fetch and merge the master branch for new stable releases
name: Update mamolinux/stable branch

# Controls when the action will run. 
on:
  # Triggers the workflow on push events but only for new tags
  push:
    tags:
      - "*.*.*"
  
  workflow_dispatch: # on button click
    inputs:
      upstream-branch:
        description: 'branch to merge from. Eg. master'
        required: true
        default: 'master'           # set the upstream branch to merge from
      branch:
        description: 'Branch to merge to'
        required: true
        default: 'mamolinux/stable'         # set the branch to merge to

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "sync-new-release"
  sync-new-release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Set default branches when run as scheduled job
      - name: Set the branches
        env:
          DEFAULT_UPSTREAM_BRANCH: 'master'           # set the upstream branch to merge from
          DEFAULT_BRANCH: 'mamolinux/stable'                    # set the branch to merge to
        run: |
          echo "upstream-branch=${{ github.event.inputs.upstream-branch || env.DEFAULT_UPSTREAM_BRANCH }}" >> $GITHUB_ENV
          echo "branch=${{ github.event.inputs.branch || env.DEFAULT_BRANCH }}" >> $GITHUB_ENV
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master
        with:
          fetch-depth: 0    
      
      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"
      
      - name: Update mamolinux/stable for new release
        # with:
        #   github_token: ${{ github.token }}
        run: |
          git checkout ${{ env.upstream-branch }}
          git checkout ${{ env.branch }}
          git merge --ff-only ${{ env.upstream-branch }}
          git push -f
